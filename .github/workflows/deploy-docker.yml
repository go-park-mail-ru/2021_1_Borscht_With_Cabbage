name: Test build and deploy Delivery-borscht backend

on:
  push:
    branches: [ dev, master, deploy ]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run tests with coverage
  #       run: 
  #         go test -coverpkg=./... -coverprofile=cover ./... && cat cover | grep -v "mock" | grep -v  "easyjson" | grep -v "proto" > cover.out &&
  #         go tool cover -func=cover.out

  build:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub Registry
        run: echo '${{ secrets.DOCKERHUB_PASSWORD }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker images
        run: sudo docker build -t borschtwithcabbage/delivery-borscht_main:${GITHUB_SHA::8} -f ./docker/main/Dockerfile

      - name: Push Docker images
        run: docker push borschtwithcabbage/delivery-borscht_main

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: sudo docker pull borschtwithcabbage/delivery-borscht_main:${GITHUB_SHA::8}
      - name: Deploy docker image
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker rm -f $(sudo docker ps -aq)
            sudo docker run -e VERSION=${GITHUB_SHA::8} -d -p 8080:8080 borschtwithcabbage/delivery-borscht_main:${GITHUB_SHA::8}
