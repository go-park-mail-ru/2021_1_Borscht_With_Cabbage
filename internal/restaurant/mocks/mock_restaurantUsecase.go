// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/borscht/backend/internal/restaurant (interfaces: RestaurantUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/borscht/backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRestaurantUsecase is a mock of RestaurantUsecase interface
type MockRestaurantUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockRestaurantUsecaseMockRecorder
}

// MockRestaurantUsecaseMockRecorder is the mock recorder for MockRestaurantUsecase
type MockRestaurantUsecaseMockRecorder struct {
	mock *MockRestaurantUsecase
}

// NewMockRestaurantUsecase creates a new mock instance
func NewMockRestaurantUsecase(ctrl *gomock.Controller) *MockRestaurantUsecase {
	mock := &MockRestaurantUsecase{ctrl: ctrl}
	mock.recorder = &MockRestaurantUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRestaurantUsecase) EXPECT() *MockRestaurantUsecaseMockRecorder {
	return m.recorder
}

// GetById mocks base method
func (m *MockRestaurantUsecase) GetById(arg0 context.Context, arg1 string) (models.RestaurantWithDishes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0, arg1)
	ret0, _ := ret[0].(models.RestaurantWithDishes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById
func (mr *MockRestaurantUsecaseMockRecorder) GetById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockRestaurantUsecase)(nil).GetById), arg0, arg1)
}

// GetVendor mocks base method
func (m *MockRestaurantUsecase) GetVendor(arg0 context.Context, arg1, arg2 int) ([]models.RestaurantInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVendor", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.RestaurantInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVendor indicates an expected call of GetVendor
func (mr *MockRestaurantUsecaseMockRecorder) GetVendor(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVendor", reflect.TypeOf((*MockRestaurantUsecase)(nil).GetVendor), arg0, arg1, arg2)
}
