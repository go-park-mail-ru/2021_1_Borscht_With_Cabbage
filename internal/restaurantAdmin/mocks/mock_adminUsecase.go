// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/borscht/backend/internal/restaurantAdmin (interfaces: AdminUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/borscht/backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdminUsecase is a mock of AdminUsecase interface
type MockAdminUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAdminUsecaseMockRecorder
}

// MockAdminUsecaseMockRecorder is the mock recorder for MockAdminUsecase
type MockAdminUsecaseMockRecorder struct {
	mock *MockAdminUsecase
}

// NewMockAdminUsecase creates a new mock instance
func NewMockAdminUsecase(ctrl *gomock.Controller) *MockAdminUsecase {
	mock := &MockAdminUsecase{ctrl: ctrl}
	mock.recorder = &MockAdminUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdminUsecase) EXPECT() *MockAdminUsecaseMockRecorder {
	return m.recorder
}

// CheckRestaurantExists mocks base method
func (m *MockAdminUsecase) CheckRestaurantExists(arg0 context.Context, arg1 models.RestaurantAuth) (*models.Restaurant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckRestaurantExists", arg0, arg1)
	ret0, _ := ret[0].(*models.Restaurant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckRestaurantExists indicates an expected call of CheckRestaurantExists
func (mr *MockAdminUsecaseMockRecorder) CheckRestaurantExists(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckRestaurantExists", reflect.TypeOf((*MockAdminUsecase)(nil).CheckRestaurantExists), arg0, arg1)
}

// Create mocks base method
func (m *MockAdminUsecase) Create(arg0 context.Context, arg1 models.Restaurant) (*models.Restaurant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*models.Restaurant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockAdminUsecaseMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAdminUsecase)(nil).Create), arg0, arg1)
}

// GetByRid mocks base method
func (m *MockAdminUsecase) GetByRid(arg0 context.Context, arg1 int) (models.Restaurant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByRid", arg0, arg1)
	ret0, _ := ret[0].(models.Restaurant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByRid indicates an expected call of GetByRid
func (mr *MockAdminUsecaseMockRecorder) GetByRid(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByRid", reflect.TypeOf((*MockAdminUsecase)(nil).GetByRid), arg0, arg1)
}
