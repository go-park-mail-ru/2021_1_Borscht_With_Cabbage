// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/borscht/backend/internal/restaurantAdmin (interfaces: AdminRestaurantRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/borscht/backend/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdminRestaurantRepo is a mock of AdminRestaurantRepo interface
type MockAdminRestaurantRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAdminRestaurantRepoMockRecorder
}

// MockAdminRestaurantRepoMockRecorder is the mock recorder for MockAdminRestaurantRepo
type MockAdminRestaurantRepoMockRecorder struct {
	mock *MockAdminRestaurantRepo
}

// NewMockAdminRestaurantRepo creates a new mock instance
func NewMockAdminRestaurantRepo(ctrl *gomock.Controller) *MockAdminRestaurantRepo {
	mock := &MockAdminRestaurantRepo{ctrl: ctrl}
	mock.recorder = &MockAdminRestaurantRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdminRestaurantRepo) EXPECT() *MockAdminRestaurantRepoMockRecorder {
	return m.recorder
}

// CheckRestaurantExists mocks base method
func (m *MockAdminRestaurantRepo) CheckRestaurantExists(arg0 context.Context, arg1 models.RestaurantAuth) (*models.RestaurantInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckRestaurantExists", arg0, arg1)
	ret0, _ := ret[0].(*models.RestaurantInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckRestaurantExists indicates an expected call of CheckRestaurantExists
func (mr *MockAdminRestaurantRepoMockRecorder) CheckRestaurantExists(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckRestaurantExists", reflect.TypeOf((*MockAdminRestaurantRepo)(nil).CheckRestaurantExists), arg0, arg1)
}

// CreateRestaurant mocks base method
func (m *MockAdminRestaurantRepo) CreateRestaurant(arg0 context.Context, arg1 models.RestaurantInfo) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRestaurant", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRestaurant indicates an expected call of CreateRestaurant
func (mr *MockAdminRestaurantRepoMockRecorder) CreateRestaurant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRestaurant", reflect.TypeOf((*MockAdminRestaurantRepo)(nil).CreateRestaurant), arg0, arg1)
}

// GetByRid mocks base method
func (m *MockAdminRestaurantRepo) GetByRid(arg0 context.Context, arg1 int) (*models.RestaurantInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByRid", arg0, arg1)
	ret0, _ := ret[0].(*models.RestaurantInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByRid indicates an expected call of GetByRid
func (mr *MockAdminRestaurantRepoMockRecorder) GetByRid(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByRid", reflect.TypeOf((*MockAdminRestaurantRepo)(nil).GetByRid), arg0, arg1)
}

// UpdateRestaurantData mocks base method
func (m *MockAdminRestaurantRepo) UpdateRestaurantData(arg0 context.Context, arg1 models.RestaurantUpdateData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRestaurantData", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRestaurantData indicates an expected call of UpdateRestaurantData
func (mr *MockAdminRestaurantRepoMockRecorder) UpdateRestaurantData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRestaurantData", reflect.TypeOf((*MockAdminRestaurantRepo)(nil).UpdateRestaurantData), arg0, arg1)
}

// UpdateRestaurantImage mocks base method
func (m *MockAdminRestaurantRepo) UpdateRestaurantImage(arg0 context.Context, arg1 int, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRestaurantImage", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRestaurantImage indicates an expected call of UpdateRestaurantImage
func (mr *MockAdminRestaurantRepoMockRecorder) UpdateRestaurantImage(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRestaurantImage", reflect.TypeOf((*MockAdminRestaurantRepo)(nil).UpdateRestaurantImage), arg0, arg1, arg2)
}
