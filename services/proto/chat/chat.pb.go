// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: chat.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int32 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Rid int32 `protobuf:"varint,2,opt,name=Rid,proto3" json:"Rid,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Id) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Id) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type InfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date   string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Text   string `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	FromMe bool   `protobuf:"varint,4,opt,name=FromMe,proto3" json:"FromMe,omitempty"`
}

func (x *InfoMessage) Reset() {
	*x = InfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoMessage) ProtoMessage() {}

func (x *InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoMessage.ProtoReflect.Descriptor instead.
func (*InfoMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *InfoMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InfoMessage) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *InfoMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *InfoMessage) GetFromMe() bool {
	if x != nil {
		return x.FromMe
	}
	return false
}

type InfoOpponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int32  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *InfoOpponent) Reset() {
	*x = InfoOpponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoOpponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoOpponent) ProtoMessage() {}

func (x *InfoOpponent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoOpponent.ProtoReflect.Descriptor instead.
func (*InfoOpponent) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *InfoOpponent) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InfoOpponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfoOpponent) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type BriefInfoChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info        *InfoOpponent `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	LastMessage string        `protobuf:"bytes,2,opt,name=LastMessage,proto3" json:"LastMessage,omitempty"`
}

func (x *BriefInfoChat) Reset() {
	*x = BriefInfoChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BriefInfoChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BriefInfoChat) ProtoMessage() {}

func (x *BriefInfoChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BriefInfoChat.ProtoReflect.Descriptor instead.
func (*BriefInfoChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *BriefInfoChat) GetInfo() *InfoOpponent {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *BriefInfoChat) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

type MoreInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	More []*InfoMessage `protobuf:"bytes,1,rep,name=More,proto3" json:"More,omitempty"`
}

func (x *MoreInfoMessage) Reset() {
	*x = MoreInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreInfoMessage) ProtoMessage() {}

func (x *MoreInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreInfoMessage.ProtoReflect.Descriptor instead.
func (*MoreInfoMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *MoreInfoMessage) GetMore() []*InfoMessage {
	if x != nil {
		return x.More
	}
	return nil
}

type MoreBriefInfoChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	More []*BriefInfoChat `protobuf:"bytes,1,rep,name=More,proto3" json:"More,omitempty"`
}

func (x *MoreBriefInfoChat) Reset() {
	*x = MoreBriefInfoChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreBriefInfoChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreBriefInfoChat) ProtoMessage() {}

func (x *MoreBriefInfoChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreBriefInfoChat.ProtoReflect.Descriptor instead.
func (*MoreBriefInfoChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *MoreBriefInfoChat) GetMore() []*BriefInfoChat {
	if x != nil {
		return x.More
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x22, 0x28, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x52, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x69,
	0x64, 0x22, 0x5d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x6d,
	0x4d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65,
	0x22, 0x4c, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x5e,
	0x0a, 0x0d, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x70,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d,
	0x0a, 0x0f, 0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2a, 0x0a, 0x04, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x41, 0x0a,
	0x11, 0x4d, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x4d, 0x6f, 0x72, 0x65,
	0x32, 0xca, 0x01, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x49, 0x64, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x68, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x49,
	0x64, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x34, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6f, 0x72, 0x73,
	0x63, 0x68, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_chat_proto_goTypes = []interface{}{
	(*Id)(nil),                // 0: protoChat.Id
	(*InfoMessage)(nil),       // 1: protoChat.InfoMessage
	(*InfoOpponent)(nil),      // 2: protoChat.InfoOpponent
	(*BriefInfoChat)(nil),     // 3: protoChat.BriefInfoChat
	(*MoreInfoMessage)(nil),   // 4: protoChat.MoreInfoMessage
	(*MoreBriefInfoChat)(nil), // 5: protoChat.MoreBriefInfoChat
}
var file_chat_proto_depIdxs = []int32{
	2, // 0: protoChat.BriefInfoChat.Info:type_name -> protoChat.InfoOpponent
	1, // 1: protoChat.MoreInfoMessage.More:type_name -> protoChat.InfoMessage
	3, // 2: protoChat.MoreBriefInfoChat.More:type_name -> protoChat.BriefInfoChat
	0, // 3: protoChat.Chat.GetAllChats:input_type -> protoChat.Id
	0, // 4: protoChat.Chat.GetAllMessagesUser:input_type -> protoChat.Id
	0, // 5: protoChat.Chat.GetAllMessagesRestaurant:input_type -> protoChat.Id
	5, // 6: protoChat.Chat.GetAllChats:output_type -> protoChat.MoreBriefInfoChat
	4, // 7: protoChat.Chat.GetAllMessagesUser:output_type -> protoChat.MoreInfoMessage
	4, // 8: protoChat.Chat.GetAllMessagesRestaurant:output_type -> protoChat.MoreInfoMessage
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoOpponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BriefInfoChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreBriefInfoChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	GetAllChats(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreBriefInfoChat, error)
	GetAllMessagesUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreInfoMessage, error)
	GetAllMessagesRestaurant(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreInfoMessage, error)
}

type chatClient struct {
	cc grpc.ClientConnInterface
}

func NewChatClient(cc grpc.ClientConnInterface) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) GetAllChats(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreBriefInfoChat, error) {
	out := new(MoreBriefInfoChat)
	err := c.cc.Invoke(ctx, "/protoChat.Chat/GetAllChats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetAllMessagesUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreInfoMessage, error) {
	out := new(MoreInfoMessage)
	err := c.cc.Invoke(ctx, "/protoChat.Chat/GetAllMessagesUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetAllMessagesRestaurant(ctx context.Context, in *Id, opts ...grpc.CallOption) (*MoreInfoMessage, error) {
	out := new(MoreInfoMessage)
	err := c.cc.Invoke(ctx, "/protoChat.Chat/GetAllMessagesRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	GetAllChats(context.Context, *Id) (*MoreBriefInfoChat, error)
	GetAllMessagesUser(context.Context, *Id) (*MoreInfoMessage, error)
	GetAllMessagesRestaurant(context.Context, *Id) (*MoreInfoMessage, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) GetAllChats(context.Context, *Id) (*MoreBriefInfoChat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllChats not implemented")
}
func (*UnimplementedChatServer) GetAllMessagesUser(context.Context, *Id) (*MoreInfoMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllMessagesUser not implemented")
}
func (*UnimplementedChatServer) GetAllMessagesRestaurant(context.Context, *Id) (*MoreInfoMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllMessagesRestaurant not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_GetAllChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetAllChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoChat.Chat/GetAllChats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetAllChats(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetAllMessagesUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetAllMessagesUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoChat.Chat/GetAllMessagesUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetAllMessagesUser(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetAllMessagesRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetAllMessagesRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoChat.Chat/GetAllMessagesRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetAllMessagesRestaurant(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoChat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllChats",
			Handler:    _Chat_GetAllChats_Handler,
		},
		{
			MethodName: "GetAllMessagesUser",
			Handler:    _Chat_GetAllMessagesUser_Handler,
		},
		{
			MethodName: "GetAllMessagesRestaurant",
			Handler:    _Chat_GetAllMessagesRestaurant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
