syntax = "proto3";

// protoc --go_out=plugins=grpc:. *.proto
// PATH="${PATH}:${HOME}/go/bin" protoc --go_out=plugins=grpc:. *.proto

option go_package = "github.com/borscht/backend/internal/services/proto";

package protoBasket;

message Address {
    string AddressName = 1;
    float Longitude = 2;
    float Latitude = 3;
    int32 Radius = 4;
}

message DishFromBasket {
    int32 ID = 1;
    string Name = 2;
    int32 Price = 3;
    int32 Number = 4;
    string Image = 5;
}

message BasketInfo {
    int32 Bid = 1;
    string RestaurantName = 2;
    string RestaurantImage = 3;
    int32 Rid = 4;
    int32 DeliveryCost = 5;
    int32 Summary = 6;
    repeated DishFromBasket Dishes = 7;
    Address Address = 8;
    int32 Uid = 9;
}

message Baskets {
    repeated BasketInfo Baskets = 1;
}

message UserRestaurantBasket {
    int32 UserID = 1;
    int32 RestaurantID = 2;
}

message IDs {
    int32 uid = 1;
    int32 rid = 2;
}

message UID {
    int32 uid = 1;
}

message BID {
    int32 bid = 1;
}

message GetBasketsParams {
    int32 uid = 1;
    float latitude = 2;
    float longitude = 3;
}

message DishToBasket {
    int32 Uid = 1;
    int32 Did = 2;
    bool IsPlus = 3;
    bool SameBasket = 4;
    int32 Rid = 5;
}

message Error {
    string err = 1;
}

message Nothing {
}

service Basket {
    rpc AddToBasket(DishToBasket) returns (Nothing);
    rpc DeleteFromBasket(DishToBasket) returns (Nothing);
    rpc GetBasket(IDs) returns (BasketInfo);
    rpc GetBaskets(GetBasketsParams) returns (Baskets);
    rpc AddBaskets(Baskets) returns (Baskets);
    rpc DeleteBaskets(UID) returns (Nothing);
    rpc DeleteBasket(BID) returns (Nothing);
}